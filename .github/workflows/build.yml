name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0" #once per week

# The schedule event can be delayed during periods of high loads of GitHub Actions workflow runs
#
# ┌───────────── minute (0 - 59)
# │ ┌───────────── hour (0 - 23)
# │ │ ┌───────────── day of the month (1 - 31)
# │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
# │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
# │ │ │ │ │
# │ │ │ │ │
# │ │ │ │ │
# * * * * *

jobs:
  include:
    runs-on: ubuntu-latest
    name: Include Files
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'AssetRipper/dxil-spirv'

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: include_files
          path: dxil_spirv_c.h
          if-no-files-found: error

  build:
    runs-on: ${{ matrix.config.runner }}

    strategy:
      matrix:
        config:
          - { name: win_x64, runner: windows-latest, os: Windows, arch: x64 }
          - { name: win_arm64, runner: windows-latest, os: Windows, arch: arm64 }
          - { name: linux_x64, runner: ubuntu-22.04, os: Linux, arch: x64 }
          - { name: linux_arm64, runner: ubuntu-22.04, os: Linux, arch: arm64 }
          - { name: mac_x64, runner: macos-latest, os: MacOS, arch: x64 }
          - { name: mac_arm64, runner: macos-latest, os: MacOS, arch: arm64 }

    name: Build - ${{ matrix.config.os }} ${{ matrix.config.arch }}
    steps:
      - name: Install MSVC ARM64 Tools (Windows ARM64)
        if: matrix.config.os == 'Windows' && matrix.config.arch == 'arm64'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: arm64

      - name: Install Dependencies (Linux ARM64)
        if: matrix.config.os == 'Linux' && matrix.config.arch == 'arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu cmake

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'AssetRipper/dxil-spirv'

      - name: Update Submodules
        run: git submodule update --init --recursive

      - name: Build (x64)
        if: matrix.config.arch == 'x64'
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release

      - name: Build (Windows ARM64)
        if: matrix.config.os == 'Windows' && matrix.config.arch == 'arm64'
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -A ARM64
          cmake --build . --config Release

      - name: Build (Linux ARM64)
        if: matrix.config.os == 'Linux' && matrix.config.arch == 'arm64'
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_SYSTEM_NAME=Linux \
                   -DCMAKE_SYSTEM_PROCESSOR=aarch64 \
                   -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc \
                   -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ \
                   -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release

      - name: Build (macOS ARM64)
        if: matrix.config.os == 'MacOS' && matrix.config.arch == 'arm64'
        run: |
          mkdir build
          cd build
          cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_OSX_ARCHITECTURES=arm64
          cmake --build . --config Release

      - name: List Files
        run: ls -R build

      - name: Upload (Windows)
        if: matrix.config.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: output_${{ matrix.config.name }}
          path: |
            build/Release/dxil-extract.exe
            build/Release/dxil-spirv.exe
            build/Release/dxil-spirv-c-shared.dll
          if-no-files-found: error

      - name: Upload (Linux)
        if: matrix.config.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: output_${{ matrix.config.name }}
          path: |
            build/dxil-extract
            build/dxil-spirv
            build/libdxil-spirv-c-shared.so
          if-no-files-found: error

      - name: Upload (MacOS)
        if: matrix.config.os == 'MacOS'
        uses: actions/upload-artifact@v4
        with:
          name: output_${{ matrix.config.name }}
          path: |
            build/dxil-extract
            build/dxil-spirv
            build/libdxil-spirv-c-shared.dylib
          if-no-files-found: error
